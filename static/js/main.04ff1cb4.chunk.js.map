{"version":3,"sources":["store/types.ts","game/board.ts","store/actions.ts","components/introScreen.tsx","game/position.ts","components/board.tsx","components/arrowKeys.tsx","components/restartButton.tsx","components/stars.tsx","components/level.tsx","components/summary.tsx","components/mainView.tsx","game/newLevel.ts","game/levels/01.ts","game/levels/02.ts","game/levels/03.ts","game/levels/04.ts","game/levels/05.ts","game/levels/06.ts","game/levels/07.ts","store/state.ts","game/main.ts","store/reducer.ts","store/store.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["LevelName","View","BoardTile","arrowUp","createAction","arrowDown","arrowLeft","arrowRight","restartLevel","toLevel","toSummary","toSpecificLevel","IntroScreen","connect","dispatch","onClick","Button","variant","MoveAction","Board","state","level","levels","activeLevel","Table","style","width","margin","tableIterator","map","row","i","key","tile","j","backgroundColor","Player","Goal","height","border","borderColor","ArrowKeys","active","data","onClickArrowUp","onClickArrowDown","onClickArrowLeft","onClickArrowRight","disabled","icon","faArrowUp","faArrowLeft","faArrowRight","faArrowDown","RestartButton","Stars","bestResult","thresholds","undefined","faStar","size","threeStar","color","twoStar","Level","clickToSummary","description","name","round","toString","Summary","levelId","faPlay","MainScreen","view","Intro","GameLevel","this","action","playerTile","board","getTile","playerPosition","result","update","tileMetaData","get","x","set","y","visited","goalTile","goalPosition","goalAction","addRound","deactivateIfReachedGoal","playerReachedGoal","storeBestResult","deactivate","new","Empty","Array","from","_","Map","xMap","startingPositions","player","goal","Tile","constructor","NoRuleTile","normalMove","NoRuleGoalCopyTile","goalData","NoRuleGoalMirrorTile","mirrorAction","WallTile","walls","allowed","Up","Down","Left","Right","WallTileGoalCopy","WallTileGoalMirror","WallTileCondition","wall","threshold","modulate","mod","GameBoard","tiles","position","Error","newAllNoRule","level1","level2","level3","level4","level5","newAllNoRuleGoalCopy","level6","newAllNoRuleGoalMirror","initialState","mainLogic","move","updateActiveLevel","f","reducer","createReducer","handleAction","actions","payload","restart","store","createStore","App","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.04ff1cb4.chunk.js","sourcesContent":["export enum LevelName {\n  Intro = \"Intro\",\n}\n\nexport enum View {\n  Summary,\n  Level,\n  Intro,\n}\n","import { BoardPosition, MoveAction } from \"./position\";\n\nexport enum BoardTile {\n  Empty = \"Empty\",\n  Goal = \"Goal\",\n  Player = \"Player\",\n}\n\nexport class PlayerBoard {\n  constructor(\n    public width: number,\n    public height: number,\n    public player: BoardPosition,\n    public goal: BoardPosition\n  ) {}\n\n  private isOnBoardX(x: number): boolean {\n    return x >= 0 && x < this.width;\n  }\n\n  private isOnBoardY(y: number): boolean {\n    return y >= 0 && y < this.height;\n  }\n\n  private isOnBoard(x: number, y: number): boolean {\n    return this.isOnBoardX(x) && this.isOnBoardY(y);\n  }\n\n  private logCoordinatesNotMatchingBoard(x: number, y: number) {\n    console.log(\n      `Field with coordinates [${x}, ${y}] does not appear on board with size ${this.width}x${this.height}`\n    );\n  }\n\n  public move(player: BoardPosition, goal: BoardPosition): PlayerBoard {\n    if (this.isOnBoard(player.x, player.y)) {\n      if (this.isOnBoard(goal.x, goal.y)) {\n        return new PlayerBoard(this.width, this.height, player, goal);\n      } else {\n        this.logCoordinatesNotMatchingBoard(goal.x, goal.y);\n        return this;\n      }\n    } else {\n      this.logCoordinatesNotMatchingBoard(player.x, player.y);\n      return this;\n    }\n  }\n\n  public movePlayer(player: BoardPosition): PlayerBoard {\n    return this.move(player, this.goal);\n  }\n\n  public moveGoal(goal: BoardPosition): PlayerBoard {\n    return this.move(this.player, goal);\n  }\n\n  public movePlayerAction(move: MoveAction): PlayerBoard {\n    return this.movePlayer(this.player.move(move));\n  }\n\n  public movePlayerBorder(move: MoveAction): PlayerBoard {\n    const movedBoard = this.movePlayerAction(move);\n    if (this.isOnBoard(movedBoard.player.x, movedBoard.player.x)) {\n      return movedBoard;\n    }\n    return this;\n  }\n\n  public movePlayerModulate(move: MoveAction): PlayerBoard {\n    return this.movePlayerAction(move).playerModulate();\n  }\n\n  public playerModulate(): PlayerBoard {\n    return this.movePlayer(this.player.modulate(this.height, this.width));\n  }\n\n  public playerReachedGoal(): boolean {\n    return this.player.x === this.goal.x && this.player.y === this.goal.y;\n  }\n\n  public tile(x: number, y: number): BoardTile {\n    if (this.player.x === x && this.player.y === y) {\n      return BoardTile.Player;\n    } else if (this.goal.x === x && this.goal.y === y) {\n      return BoardTile.Goal;\n    } else {\n      return BoardTile.Empty;\n    }\n  }\n\n  public tableIterator(): Array<Array<BoardTile>> {\n    return Array.from(Array(this.height), (_, y) =>\n      Array.from(Array(this.width), (_, x) => this.tile(x, this.width - 1 - y))\n    );\n  }\n}\n","import { createAction } from \"typesafe-actions\";\n\n// ACTIONS\nexport const ARROW_UP = \"ARROW_UP\";\nexport const ARROW_DOWN = \"ARROW_DOWN\";\nexport const ARROW_RIGHT = \"ARROW_RIGHT\";\nexport const ARROW_LEFT = \"ARROW_LEFT\";\nexport const RESTART_LEVEL = \"RESTART_LEVEL\";\nexport const TO_LEVEL = \"TO_LEVEL\";\nexport const TO_SUMMARY = \"TO_SUMMARY\";\nexport const TO_SPECIFIC_LEVEL = \"TO_SPECIFIC_LEVEL\";\n\nexport const arrowUp = createAction(ARROW_UP)();\nexport const arrowDown = createAction(ARROW_DOWN)();\nexport const arrowLeft = createAction(ARROW_LEFT)();\nexport const arrowRight = createAction(ARROW_RIGHT)();\nexport const restartLevel = createAction(RESTART_LEVEL)();\nexport const toLevel = createAction(TO_LEVEL)();\nexport const toSummary = createAction(TO_SUMMARY)();\nexport const toSpecificLevel = createAction(TO_SPECIFIC_LEVEL)<number>();\n","import * as React from \"react\";\nimport Button from \"react-bootstrap/esm/Button\";\nimport { connect } from \"react-redux\";\nimport { toLevel } from \"../store/actions\";\nimport { RootAction } from \"../store/reducer\";\n\nconst mapDispatchToProps = (dispatch: React.Dispatch<RootAction>) => ({\n  onClick: () => dispatch(toLevel()),\n});\n\ntype IntroScreenProps = ReturnType<typeof mapDispatchToProps>;\n\nconst _IntroScreen: React.FC<IntroScreenProps> = ({ onClick }) => {\n  return (\n    <div>\n      <h3>Are you ready to</h3>\n      <h1>chase your dreams?</h1>\n      <br />\n      <Button variant=\"primary\" onClick={onClick}>\n        Yes, I am ready!\n      </Button>\n    </div>\n  );\n};\n\nexport const IntroScreen = connect(null, mapDispatchToProps)(_IntroScreen);\n","export enum MoveAction {\n  Up,\n  Down,\n  Left,\n  Right,\n}\n\nexport class BoardPosition {\n  constructor(public x: number, public y: number) {}\n\n  public move(move: MoveAction): BoardPosition {\n    switch (move) {\n      case MoveAction.Up:\n        return new BoardPosition(this.x, this.y + 1);\n      case MoveAction.Down:\n        return new BoardPosition(this.x, this.y - 1);\n      case MoveAction.Left:\n        return new BoardPosition(this.x - 1, this.y);\n      case MoveAction.Right:\n        return new BoardPosition(this.x + 1, this.y);\n    }\n  }\n\n  public modulateX(columns: number): BoardPosition {\n    return new BoardPosition(modulate(this.x, columns), this.y);\n  }\n\n  public modulateY(rows: number): BoardPosition {\n    return new BoardPosition(this.x, modulate(this.y, rows));\n  }\n\n  public modulate(rows: number, columns: number): BoardPosition {\n    return this.modulateX(columns).modulateY(rows);\n  }\n}\n\nfunction modulate(x: number, mod: number): number {\n  while (x < 0) {\n    x += mod;\n  }\n  while (x >= mod) {\n    x -= mod;\n  }\n  return x;\n}\n","import * as React from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport { connect } from \"react-redux\";\nimport { BoardTile } from \"../game/board\";\nimport { State } from \"../store/state\";\n\ntype Props = ReturnType<typeof mapStateToProps>;\n\nconst _Board: React.FC<Props> = ({ level }) => {\n  return (\n    <div>\n      <Table style={{ width: 500, margin: \"auto\" }}>\n        <tbody>\n          {level.tableIterator().map((row, i) => (\n            <tr key={`tr ${i}`}>\n              {row.map((tile, j) => (\n                <td\n                  style={{\n                    backgroundColor:\n                      tile === BoardTile.Player\n                        ? \"blue\"\n                        : tile === BoardTile.Goal\n                        ? \"red\"\n                        : \"white\",\n                    width: \"4em\",\n                    height: \"4em\",\n                    border: \"solid 2px\",\n                    borderColor: \"black\",\n                  }}\n                  key={`td ${j}`}\n                ></td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: State) => ({\n  level: state.levels[state.activeLevel],\n});\n\nexport const Board = connect(mapStateToProps)(_Board);\n","import Button from \"react-bootstrap/Button\";\nimport * as React from \"react\";\nimport { arrowUp, arrowLeft, arrowRight, arrowDown } from \"../store/actions\";\nimport { connect } from \"react-redux\";\n\nimport { RootAction } from \"../store/reducer\";\nimport { State } from \"../store/state\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faArrowUp,\n  faArrowLeft,\n  faArrowRight,\n  faArrowDown,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst mapStateToProps = (state: State) => ({\n  active: state.levels[state.activeLevel].data.active,\n});\n\nconst mapDispatchToProps = (dispatch: React.Dispatch<RootAction>) => ({\n  onClickArrowUp: () => dispatch(arrowUp()),\n  onClickArrowDown: () => dispatch(arrowDown()),\n  onClickArrowLeft: () => dispatch(arrowLeft()),\n  onClickArrowRight: () => dispatch(arrowRight()),\n});\n\ntype ArrowKeysProps = ReturnType<typeof mapDispatchToProps> &\n  ReturnType<typeof mapStateToProps>;\n\nconst _ArrowKeys: React.FC<ArrowKeysProps> = ({\n  onClickArrowDown,\n  onClickArrowLeft,\n  onClickArrowRight,\n  onClickArrowUp,\n  active,\n}) => {\n  return (\n    <div>\n      <div>\n        <Button variant=\"primary\" onClick={onClickArrowUp} disabled={!active}>\n          <FontAwesomeIcon icon={faArrowUp} />\n        </Button>\n      </div>\n      <div>\n        <Button variant=\"primary\" onClick={onClickArrowLeft} disabled={!active}>\n          <FontAwesomeIcon icon={faArrowLeft} />\n        </Button>{\" \"}\n        <Button\n          variant=\"primary\"\n          onClick={onClickArrowRight}\n          disabled={!active}\n        >\n          <FontAwesomeIcon icon={faArrowRight} />\n        </Button>\n      </div>\n      <div>\n        <Button variant=\"primary\" onClick={onClickArrowDown} disabled={!active}>\n          <FontAwesomeIcon icon={faArrowDown} />\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport const ArrowKeys = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_ArrowKeys);\n","import * as React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport { connect } from \"react-redux\";\nimport { restartLevel } from \"../store/actions\";\nimport { RootAction } from \"../store/reducer\";\n\nconst mapDispatchToProps = (dispatch: React.Dispatch<RootAction>) => ({\n  onClick: () => dispatch(restartLevel()),\n});\n\ntype RestartButtonProps = ReturnType<typeof mapDispatchToProps>;\n\nconst _RestartButton: React.FC<RestartButtonProps> = ({ onClick }) => {\n  return (\n    <div>\n      <Button variant=\"secondary\" onClick={onClick}>\n        Restart Level\n      </Button>\n    </div>\n  );\n};\n\nexport const RestartButton = connect(null, mapDispatchToProps)(_RestartButton);\n","import { faStar } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport * as React from \"react\";\nimport { LevelDescription } from \"../game/newLevel\";\n\ntype Props = {\n  bestResult: number | undefined;\n  thresholds: LevelDescription[\"thresholds\"];\n};\n\nexport const Stars: React.FC<Props> = ({ bestResult, thresholds }) => {\n  const stars =\n    bestResult === undefined ? (\n      <div>\n        <FontAwesomeIcon icon={faStar} size={\"2x\"} />\n        <FontAwesomeIcon icon={faStar} size={\"2x\"} />\n        <FontAwesomeIcon icon={faStar} size={\"2x\"} />\n      </div>\n    ) : bestResult <= thresholds.threeStar ? (\n      <div>\n        <FontAwesomeIcon icon={faStar} size={\"2x\"} color=\"red\" />\n        <FontAwesomeIcon icon={faStar} size={\"2x\"} color=\"red\" />\n        <FontAwesomeIcon icon={faStar} size={\"2x\"} color=\"red\" />\n      </div>\n    ) : bestResult <= thresholds.twoStar ? (\n      <div>\n        <FontAwesomeIcon icon={faStar} size={\"2x\"} color=\"red\" />\n        <FontAwesomeIcon icon={faStar} size={\"2x\"} color=\"red\" />\n        <FontAwesomeIcon icon={faStar} size={\"2x\"} />\n      </div>\n    ) : (\n      <div>\n        <FontAwesomeIcon icon={faStar} size={\"2x\"} color=\"red\" />\n        <FontAwesomeIcon icon={faStar} size={\"2x\"} />\n        <FontAwesomeIcon icon={faStar} size={\"2x\"} />\n      </div>\n    );\n  return stars;\n};\n","import { GameLevel } from \"../game/newLevel\";\nimport { State } from \"../store/state\";\nimport { connect } from \"react-redux\";\nimport * as React from \"react\";\nimport { Board } from \"./board\";\nimport { ArrowKeys } from \"./arrowKeys\";\nimport { RestartButton } from \"./restartButton\";\nimport Button from \"react-bootstrap/esm/Button\";\nimport { RootAction } from \"../store/reducer\";\nimport { toSummary } from \"../store/actions\";\nimport { Stars } from \"./stars\";\n\ntype Props = {\n  level: GameLevel;\n} & ReturnType<typeof mapDispatchToProps>;\n\nconst _Level: React.FC<Props> = ({ level, clickToSummary }) => {\n  return (\n    <div>\n      <h1>{level.description.name}</h1>\n      <h3>Current round: {level.data.round}</h3>\n      <h3>\n        Best result:{\" \"}\n        {level.data.bestResult === undefined\n          ? \"-\"\n          : level.data.bestResult.toString()}\n      </h3>\n      <Stars\n        bestResult={level.data.bestResult}\n        thresholds={level.description.thresholds}\n      />\n      <br />\n      <Board />\n      <br />\n      <ArrowKeys />\n      <br />\n      <RestartButton />\n      <Button variant=\"secondary\" onClick={clickToSummary}>\n        To summary\n      </Button>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: State) => ({\n  level: state.levels[state.activeLevel],\n});\n\nconst mapDispatchToProps = (dispatch: React.Dispatch<RootAction>) => ({\n  clickToSummary: () => dispatch(toSummary()),\n});\n\nexport const Level = connect(mapStateToProps, mapDispatchToProps)(_Level);\n","import * as React from \"react\";\nimport Table from \"react-bootstrap/esm/Table\";\nimport { connect } from \"react-redux\";\nimport { toSpecificLevel } from \"../store/actions\";\nimport { RootAction } from \"../store/reducer\";\nimport { State } from \"../store/state\";\nimport { Stars } from \"./stars\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Button from \"react-bootstrap/esm/Button\";\nimport { faPlay } from \"@fortawesome/free-solid-svg-icons\";\n\nconst mapDispatchToProps = (dispatch: React.Dispatch<RootAction>) => ({\n  onClick: (levelId: number) => dispatch(toSpecificLevel(levelId)),\n});\n\nconst mapStateToProps = (state: State) => ({\n  levels: state.levels,\n});\n\ntype SummaryProps = ReturnType<typeof mapDispatchToProps> &\n  ReturnType<typeof mapStateToProps>;\n\nconst _Summary: React.FC<SummaryProps> = ({ onClick, levels }) => {\n  return (\n    <div>\n      <Table>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Level name</th>\n            <th>Best result</th>\n            <th>Rating</th>\n            <th>Play</th>\n          </tr>\n        </thead>\n        <tbody>\n          {levels.map((level, i) => (\n            <tr key={i}>\n              <td>{i + 1}</td>\n              <td>{level.description.name}</td>\n              <td>{level.data.bestResult}</td>\n              <td>\n                <Stars\n                  bestResult={level.data.bestResult}\n                  thresholds={level.description.thresholds}\n                />\n              </td>\n              <td>\n                <Button variant=\"primary\" onClick={() => onClick(i)}>\n                  <FontAwesomeIcon icon={faPlay} />\n                </Button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport const Summary = connect(mapStateToProps, mapDispatchToProps)(_Summary);\n","import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from \"../store/state\";\nimport { View } from \"../store/types\";\nimport { IntroScreen } from \"./introScreen\";\nimport { Level } from \"./level\";\nimport { Summary } from \"./summary\";\n\ntype IntroScreenProps = ReturnType<typeof mapStateToProps>;\n\nconst _MainScreen: React.FC<IntroScreenProps> = ({ view }) => {\n  switch (view) {\n    case View.Intro:\n      return <IntroScreen />;\n    case View.Level:\n      return <Level />;\n    case View.Summary:\n      return <Summary />;\n  }\n};\n\nconst mapStateToProps = (state: State) => ({\n  view: state.view,\n});\n\nexport const MainScreen = connect(mapStateToProps)(_MainScreen);\n","import { MoveAction } from \"./position\";\n\nexport type LevelDescription = {\n  name: string;\n  board: GameBoard;\n  thresholds: {\n    twoStar: number;\n    threeStar: number;\n  };\n  startingPositions: {\n    player: BoardPosition;\n    goal: BoardPosition;\n  };\n};\n\nexport type TileMeta = { visited: boolean };\n\nexport type LevelData = {\n  round: number;\n  bestResult: number | undefined;\n  active: boolean;\n  playerPosition: BoardPosition;\n  goalPosition: BoardPosition;\n  tileMetaData: Map<number, Map<number, TileMeta>>;\n};\n\nexport enum BoardTile {\n  Empty = \"Empty\",\n  Goal = \"Goal\",\n  Player = \"Player\",\n}\n\nexport class GameLevel {\n  constructor(public description: LevelDescription, public data: LevelData) {}\n\n  public static new(description: LevelDescription): GameLevel {\n    const tileMetaData = new Map();\n    for (let x = 0; x < description.board.width; x++) {\n      const xMap = new Map();\n      tileMetaData.set(x, xMap);\n      for (let y = 0; y < description.board.height; y++) {\n        xMap.set(y, { visited: false });\n      }\n    }\n    tileMetaData\n      .get(description.startingPositions.player.x)\n      .set(description.startingPositions.player.y, { visited: true });\n    return new GameLevel(description, {\n      round: 0,\n      bestResult: undefined,\n      active: true,\n      playerPosition: description.startingPositions.player,\n      goalPosition: description.startingPositions.goal,\n      tileMetaData,\n    });\n  }\n\n  public update(data: Partial<LevelData>): GameLevel {\n    return new GameLevel(this.description, { ...this.data, ...data });\n  }\n\n  public action(action: MoveAction): GameLevel {\n    const playerTile = this.description.board.getTile(this.data.playerPosition);\n    const result = this.update(\n      playerTile.action(this.description.board, this.data, action)\n    );\n    result.data.tileMetaData\n      .get(result.data.playerPosition.x)!\n      .set(result.data.playerPosition.y, { visited: true });\n    return result;\n  }\n\n  public goalAction(action: MoveAction): GameLevel {\n    const goalTile = this.description.board.getTile(this.data.goalPosition);\n    return this.update(\n      goalTile.goalAction(this.description.board, this.data, action)\n    )\n      .addRound()\n      .deactivateIfReachedGoal();\n  }\n\n  public addRound(): GameLevel {\n    return this.update({ round: this.data.round + 1 });\n  }\n\n  public deactivate(): GameLevel {\n    return this.update({ active: false });\n  }\n\n  public storeBestResult(): GameLevel {\n    return this.update({\n      bestResult:\n        this.data.bestResult === undefined\n          ? this.data.round\n          : this.data.round < this.data.bestResult\n          ? this.data.round\n          : this.data.bestResult,\n    });\n  }\n\n  public deactivateIfReachedGoal(): GameLevel {\n    return this.playerReachedGoal()\n      ? this.storeBestResult().deactivate()\n      : this;\n  }\n\n  public playerReachedGoal(): boolean {\n    return (\n      this.data.playerPosition.x === this.data.goalPosition.x &&\n      this.data.playerPosition.y === this.data.goalPosition.y\n    );\n  }\n\n  public restart(): GameLevel {\n    return GameLevel.new(this.description).update({\n      bestResult: this.data.bestResult,\n    });\n  }\n\n  public tile(x: number, y: number): BoardTile {\n    if (this.data.playerPosition.x === x && this.data.playerPosition.y === y) {\n      return BoardTile.Player;\n    } else if (\n      this.data.goalPosition.x === x &&\n      this.data.goalPosition.y === y\n    ) {\n      return BoardTile.Goal;\n    } else {\n      return BoardTile.Empty;\n    }\n  }\n\n  public tableIterator(): Array<Array<BoardTile>> {\n    return Array.from(Array(this.description.board.height), (_, y) =>\n      Array.from(Array(this.description.board.width), (_, x) =>\n        this.tile(x, this.description.board.width - 1 - y)\n      )\n    );\n  }\n}\n\nabstract class Tile {\n  private name: string;\n  constructor() {\n    this.name = this.constructor.name;\n  }\n  public abstract action(\n    board: GameBoard,\n    data: LevelData,\n    action: MoveAction\n  ): LevelData;\n\n  public goalAction(\n    board: GameBoard,\n    data: LevelData,\n    action: MoveAction\n  ): LevelData {\n    return data;\n  }\n}\n\nexport class NoRuleTile extends Tile {\n  public action(\n    board: GameBoard,\n    data: LevelData,\n    action: MoveAction\n  ): LevelData {\n    return {\n      ...data,\n      playerPosition: normalMove(\n        data.playerPosition,\n        action,\n        board.width,\n        board.height\n      ),\n    };\n  }\n}\n\nexport class NoRuleGoalCopyTile extends NoRuleTile {\n  public goalAction(\n    board: GameBoard,\n    data: LevelData,\n    action: MoveAction\n  ): LevelData {\n    const goalTile = board.getTile(data.goalPosition);\n    const goalData = { ...data, playerPosition: data.goalPosition }; // HACK\n    const goalResult = goalTile.action(board, goalData, action); // HACK\n    const goalPosition = goalResult.playerPosition; // HACK\n    return { ...data, goalPosition };\n  }\n}\n\nexport class NoRuleGoalMirrorTile extends NoRuleTile {\n  public goalAction(\n    board: GameBoard,\n    data: LevelData,\n    action: MoveAction\n  ): LevelData {\n    const goalTile = board.getTile(data.goalPosition);\n    const goalData = { ...data, playerPosition: data.goalPosition }; // HACK\n    const goalResult = goalTile.action(board, goalData, mirrorAction(action)); // HACK\n    const goalPosition = goalResult.playerPosition; // HACK\n    return { ...data, goalPosition };\n  }\n}\n\nexport class WallTile extends Tile {\n  private allowed: { [action in MoveAction]: boolean };\n  constructor(walls: MoveAction[]) {\n    super();\n    const allowed = {\n      [MoveAction.Up]: true,\n      [MoveAction.Down]: true,\n      [MoveAction.Left]: true,\n      [MoveAction.Right]: true,\n    };\n    for (const wall of walls) {\n      allowed[wall] = false;\n    }\n    this.allowed = allowed;\n  }\n\n  public action(\n    board: GameBoard,\n    data: LevelData,\n    action: MoveAction\n  ): LevelData {\n    if (this.allowed[action]) {\n      return new NoRuleTile().action(board, data, action);\n    } else {\n      return data;\n    }\n  }\n}\n\nexport class WallTileGoalCopy extends WallTile {\n  public goalAction(\n    board: GameBoard,\n    data: LevelData,\n    action: MoveAction\n  ): LevelData {\n    const goalTile = board.getTile(data.goalPosition);\n    const goalData = { ...data, playerPosition: data.goalPosition }; // HACK\n    const goalResult = goalTile.action(board, goalData, action); // HACK\n    const goalPosition = goalResult.playerPosition; // HACK\n    return { ...data, goalPosition };\n  }\n}\n\nexport class WallTileGoalMirror extends WallTile {\n  public goalAction(\n    board: GameBoard,\n    data: LevelData,\n    action: MoveAction\n  ): LevelData {\n    const goalTile = board.getTile(data.goalPosition);\n    const goalData = { ...data, playerPosition: data.goalPosition }; // HACK\n    const goalResult = goalTile.action(board, goalData, mirrorAction(action)); // HACK\n    const goalPosition = goalResult.playerPosition; // HACK\n    return { ...data, goalPosition };\n  }\n}\n\nexport class WallTileCondition extends Tile {\n  constructor(\n    private walls: {\n      [action in MoveAction]?:\n        | { variant: \"visit\"; x: number; y: number }\n        | { variant: \"always\" }\n        | { variant: \"round\"; threshold: number };\n    }\n  ) {\n    super();\n  }\n\n  public action(\n    board: GameBoard,\n    data: LevelData,\n    action: MoveAction\n  ): LevelData {\n    const wall = this.walls[action];\n    if (wall === undefined) {\n      return new NoRuleTile().action(board, data, action);\n    }\n    if (wall.variant === \"always\") {\n      return data;\n    } else if (wall.variant === \"visit\") {\n      if (data.tileMetaData.get(wall.x)?.get(wall.y)!.visited) {\n        return new NoRuleTile().action(board, data, action);\n      } else {\n        return data;\n      }\n    } else {\n      if (data.round >= wall.threshold) {\n        return new NoRuleTile().action(board, data, action);\n      } else {\n        return data;\n      }\n    }\n  }\n}\n\ntype BoardPosition = { x: number; y: number };\n\nfunction modulate(x: number, mod: number): number {\n  while (x < 0) {\n    x += mod;\n  }\n  while (x >= mod) {\n    x -= mod;\n  }\n  return x;\n}\n\nexport class GameBoard {\n  constructor(\n    public width: number,\n    public height: number,\n    private tiles: Map<number, Map<number, Tile>>\n  ) {}\n\n  public static newAllNoRule(width: number, height: number): GameBoard {\n    const tiles: Map<number, Map<number, Tile>> = new Map();\n    for (let x = 0; x < width; x++) {\n      const xMap = new Map();\n      tiles.set(x, xMap);\n      for (let y = 0; y < height; y++) {\n        xMap.set(y, new NoRuleTile());\n      }\n    }\n    return new GameBoard(width, height, tiles);\n  }\n\n  public static newAllNoRuleGoalCopy(width: number, height: number): GameBoard {\n    const tiles: Map<number, Map<number, Tile>> = new Map();\n    for (let x = 0; x < width; x++) {\n      const xMap = new Map();\n      tiles.set(x, xMap);\n      for (let y = 0; y < height; y++) {\n        xMap.set(y, new NoRuleGoalCopyTile());\n      }\n    }\n    return new GameBoard(width, height, tiles);\n  }\n\n  public static newAllNoRuleGoalMirror(\n    width: number,\n    height: number\n  ): GameBoard {\n    const tiles: Map<number, Map<number, Tile>> = new Map();\n    for (let x = 0; x < width; x++) {\n      const xMap = new Map();\n      tiles.set(x, xMap);\n      for (let y = 0; y < height; y++) {\n        xMap.set(y, new NoRuleGoalMirrorTile());\n      }\n    }\n    return new GameBoard(width, height, tiles);\n  }\n\n  public update(position: BoardPosition, tile: Tile): GameBoard {\n    const mapX = this.tiles.get(position.x)!;\n    mapX.set(position.y, tile);\n    return this;\n  }\n\n  public getTile(position: BoardPosition): Tile {\n    const tile = this.tiles.get(position.x)?.get(position.y);\n    if (tile === undefined) {\n      throw Error(\n        `Unable to find tile for the input player position ${position}`\n      );\n    }\n    return tile;\n  }\n}\n\nfunction normalMove(\n  position: BoardPosition,\n  action: MoveAction,\n  width: number,\n  height: number\n): BoardPosition {\n  switch (action) {\n    case MoveAction.Up:\n      return { x: position.x, y: modulate(position.y + 1, height) };\n    case MoveAction.Down:\n      return { x: position.x, y: modulate(position.y - 1, height) };\n    case MoveAction.Left:\n      return { x: modulate(position.x - 1, width), y: position.y };\n    case MoveAction.Right:\n      return { x: modulate(position.x + 1, width), y: position.y };\n  }\n}\n\nfunction mirrorAction(action: MoveAction): MoveAction {\n  switch (action) {\n    case MoveAction.Up:\n      return MoveAction.Down;\n    case MoveAction.Down:\n      return MoveAction.Up;\n    case MoveAction.Left:\n      return MoveAction.Right;\n    case MoveAction.Right:\n      return MoveAction.Left;\n  }\n}\n","import { GameBoard, GameLevel, WallTile } from \"../newLevel\";\nimport { MoveAction } from \"../position\";\n\nconst board = GameBoard.newAllNoRule(6, 6)\n  .update({ x: 0, y: 0 }, new WallTile([MoveAction.Down, MoveAction.Left]))\n  .update({ x: 1, y: 0 }, new WallTile([MoveAction.Down]))\n  .update({ x: 2, y: 0 }, new WallTile([MoveAction.Down]))\n  .update({ x: 3, y: 0 }, new WallTile([MoveAction.Down]))\n  .update({ x: 4, y: 0 }, new WallTile([MoveAction.Down]))\n  .update({ x: 5, y: 0 }, new WallTile([MoveAction.Down, MoveAction.Right]))\n  .update({ x: 5, y: 1 }, new WallTile([MoveAction.Right]))\n  .update({ x: 5, y: 2 }, new WallTile([MoveAction.Right]))\n  .update({ x: 5, y: 3 }, new WallTile([MoveAction.Right]))\n  .update({ x: 5, y: 4 }, new WallTile([MoveAction.Right]))\n  .update({ x: 5, y: 5 }, new WallTile([MoveAction.Right, MoveAction.Up]))\n  .update({ x: 4, y: 5 }, new WallTile([MoveAction.Up]))\n  .update({ x: 3, y: 5 }, new WallTile([MoveAction.Up]))\n  .update({ x: 2, y: 5 }, new WallTile([MoveAction.Up]))\n  .update({ x: 1, y: 5 }, new WallTile([MoveAction.Up]))\n  .update({ x: 0, y: 5 }, new WallTile([MoveAction.Left, MoveAction.Up]))\n  .update({ x: 0, y: 4 }, new WallTile([MoveAction.Left]))\n  .update({ x: 0, y: 3 }, new WallTile([MoveAction.Left]))\n  .update({ x: 0, y: 2 }, new WallTile([MoveAction.Left]))\n  .update({ x: 0, y: 1 }, new WallTile([MoveAction.Left]));\n\nexport const level1 = GameLevel.new({\n  name: \"Intro\",\n  thresholds: {\n    twoStar: 12,\n    threeStar: 10,\n  },\n  startingPositions: {\n    player: { x: 0, y: 0 },\n    goal: { x: 5, y: 5 },\n  },\n  board,\n});\n","import { GameBoard, WallTile, GameLevel } from \"../newLevel\";\nimport { MoveAction } from \"../position\";\n\nconst board = GameBoard.newAllNoRule(6, 6)\n  .update({ x: 5, y: 5 }, new WallTile([MoveAction.Down, MoveAction.Left]))\n  .update({ x: 0, y: 5 }, new WallTile([MoveAction.Down]))\n  .update({ x: 1, y: 5 }, new WallTile([MoveAction.Down]))\n  .update({ x: 2, y: 5 }, new WallTile([MoveAction.Down]))\n  .update({ x: 3, y: 5 }, new WallTile([MoveAction.Down]))\n  .update({ x: 4, y: 5 }, new WallTile([MoveAction.Down, MoveAction.Right]))\n  .update({ x: 4, y: 0 }, new WallTile([MoveAction.Right]))\n  .update({ x: 4, y: 1 }, new WallTile([MoveAction.Right]))\n  .update({ x: 4, y: 2 }, new WallTile([MoveAction.Right]))\n  .update({ x: 4, y: 3 }, new WallTile([MoveAction.Right]))\n  .update({ x: 4, y: 4 }, new WallTile([MoveAction.Right, MoveAction.Up]))\n  .update({ x: 3, y: 4 }, new WallTile([MoveAction.Up]))\n  .update({ x: 2, y: 4 }, new WallTile([MoveAction.Up]))\n  .update({ x: 1, y: 4 }, new WallTile([MoveAction.Up]))\n  .update({ x: 0, y: 4 }, new WallTile([MoveAction.Up]))\n  .update({ x: 5, y: 4 }, new WallTile([MoveAction.Left, MoveAction.Up]))\n  .update({ x: 5, y: 3 }, new WallTile([MoveAction.Left]))\n  .update({ x: 5, y: 2 }, new WallTile([MoveAction.Left]))\n  .update({ x: 5, y: 1 }, new WallTile([MoveAction.Left]))\n  .update({ x: 5, y: 0 }, new WallTile([MoveAction.Left]));\n\nexport const level2 = GameLevel.new({\n  name: \"Not so straightforward\",\n  thresholds: {\n    twoStar: 6,\n    threeStar: 2,\n  },\n  startingPositions: {\n    player: { x: 0, y: 0 },\n    goal: { x: 5, y: 5 },\n  },\n  board,\n});\n","import { GameBoard, WallTile, GameLevel } from \"../newLevel\";\nimport { MoveAction } from \"../position\";\n\nconst board = GameBoard.newAllNoRule(6, 6)\n  .update(\n    { x: 0, y: 0 },\n    new WallTile([MoveAction.Down, MoveAction.Left, MoveAction.Right])\n  )\n  .update({ x: 1, y: 0 }, new WallTile([MoveAction.Down, MoveAction.Left]))\n  .update({ x: 2, y: 0 }, new WallTile([MoveAction.Down, MoveAction.Up]))\n  .update(\n    { x: 3, y: 0 },\n    new WallTile([MoveAction.Down, MoveAction.Up, MoveAction.Right])\n  )\n  .update({ x: 4, y: 0 }, new WallTile([MoveAction.Down, MoveAction.Left]))\n  .update({ x: 5, y: 0 }, new WallTile([MoveAction.Right]))\n  .update({ x: 0, y: 1 }, new WallTile([MoveAction.Right, MoveAction.Left]))\n  .update({ x: 1, y: 1 }, new WallTile([MoveAction.Left, MoveAction.Up]))\n  .update({ x: 2, y: 1 }, new WallTile([MoveAction.Down, MoveAction.Right]))\n  .update({ x: 3, y: 1 }, new WallTile([MoveAction.Down, MoveAction.Left]))\n  .update({ x: 4, y: 1 }, new WallTile([MoveAction.Up, MoveAction.Right]))\n  .update({ x: 5, y: 1 }, new WallTile([MoveAction.Left, MoveAction.Right]))\n  .update({ x: 0, y: 2 }, new WallTile([MoveAction.Left]))\n  .update({ x: 1, y: 2 }, new WallTile([MoveAction.Down, MoveAction.Up]))\n  .update({ x: 2, y: 2 }, new WallTile([MoveAction.Right]))\n  .update({ x: 3, y: 2 }, new WallTile([MoveAction.Left, MoveAction.Right]))\n  .update(\n    { x: 4, y: 2 },\n    new WallTile([MoveAction.Down, MoveAction.Left, MoveAction.Right])\n  )\n  .update({ x: 5, y: 2 }, new WallTile([MoveAction.Left, MoveAction.Right]))\n  .update({ x: 0, y: 3 }, new WallTile([MoveAction.Right, MoveAction.Left]))\n  .update({ x: 1, y: 3 }, new WallTile([MoveAction.Down, MoveAction.Left]))\n  //   .update({ x: 2, y: 3 }, new WallTile([MoveAction.Down]))\n  .update({ x: 3, y: 3 }, new WallTile([MoveAction.Up]))\n  .update({ x: 4, y: 3 }, new WallTile([MoveAction.Up, MoveAction.Right]))\n  .update({ x: 5, y: 3 }, new WallTile([MoveAction.Left, MoveAction.Right]))\n  .update({ x: 0, y: 4 }, new WallTile([MoveAction.Right, MoveAction.Left]))\n  .update({ x: 1, y: 4 }, new WallTile([MoveAction.Left, MoveAction.Right]))\n  .update({ x: 2, y: 4 }, new WallTile([MoveAction.Left, MoveAction.Up]))\n  .update({ x: 3, y: 4 }, new WallTile([MoveAction.Down]))\n  .update({ x: 4, y: 4 }, new WallTile([MoveAction.Down, MoveAction.Right]))\n  .update(\n    { x: 5, y: 4 },\n    new WallTile([MoveAction.Left, MoveAction.Right, MoveAction.Up])\n  )\n  .update({ x: 0, y: 5 }, new WallTile([MoveAction.Left, MoveAction.Up]))\n  .update({ x: 1, y: 5 }, new WallTile([MoveAction.Up]))\n  .update({ x: 2, y: 5 }, new WallTile([MoveAction.Up, MoveAction.Down]))\n  .update({ x: 3, y: 5 }, new WallTile([MoveAction.Right, MoveAction.Up]))\n  .update(\n    { x: 4, y: 5 },\n    new WallTile([MoveAction.Right, MoveAction.Up, MoveAction.Left])\n  )\n  .update(\n    { x: 5, y: 5 },\n    new WallTile([MoveAction.Left, MoveAction.Down, MoveAction.Right])\n  );\n\nexport const level3 = GameLevel.new({\n  name: \"Are you lost?\",\n  thresholds: {\n    twoStar: 20,\n    threeStar: 12,\n  },\n  startingPositions: {\n    player: { x: 0, y: 0 },\n    goal: { x: 5, y: 5 },\n  },\n  board,\n});\n","import { GameBoard, GameLevel, WallTile, WallTileCondition } from \"../newLevel\";\nimport { MoveAction } from \"../position\";\n\nconst board = GameBoard.newAllNoRule(6, 6)\n  .update({ x: 0, y: 0 }, new WallTile([MoveAction.Down, MoveAction.Left]))\n  .update({ x: 1, y: 0 }, new WallTile([MoveAction.Down]))\n  .update({ x: 2, y: 0 }, new WallTile([MoveAction.Down]))\n  .update({ x: 3, y: 0 }, new WallTile([MoveAction.Down]))\n  .update({ x: 4, y: 0 }, new WallTile([MoveAction.Down]))\n  .update({ x: 5, y: 0 }, new WallTile([MoveAction.Down, MoveAction.Right]))\n  .update({ x: 5, y: 1 }, new WallTile([MoveAction.Right]))\n  .update({ x: 5, y: 2 }, new WallTile([MoveAction.Right]))\n  .update({ x: 5, y: 3 }, new WallTile([MoveAction.Right]))\n  .update(\n    { x: 5, y: 4 },\n    new WallTileCondition({\n      [MoveAction.Right]: { variant: \"always\" },\n      [MoveAction.Up]: { variant: \"round\", threshold: 23 },\n    })\n  )\n  .update({ x: 5, y: 5 }, new WallTile([MoveAction.Right, MoveAction.Up]))\n  .update(\n    { x: 4, y: 5 },\n    new WallTileCondition({\n      [MoveAction.Up]: { variant: \"always\" },\n      [MoveAction.Right]: { variant: \"round\", threshold: 23 },\n    })\n  )\n  .update({ x: 3, y: 5 }, new WallTile([MoveAction.Up]))\n  .update({ x: 2, y: 5 }, new WallTile([MoveAction.Up]))\n  .update({ x: 1, y: 5 }, new WallTile([MoveAction.Up]))\n  .update({ x: 0, y: 5 }, new WallTile([MoveAction.Left, MoveAction.Up]))\n  .update({ x: 0, y: 4 }, new WallTile([MoveAction.Left]))\n  .update({ x: 0, y: 3 }, new WallTile([MoveAction.Left]))\n  .update({ x: 0, y: 2 }, new WallTile([MoveAction.Left]))\n  .update({ x: 0, y: 1 }, new WallTile([MoveAction.Left]));\n\nexport const level4 = GameLevel.new({\n  name: \"Banging your head in anger\",\n  thresholds: {\n    twoStar: 30,\n    threeStar: 24,\n  },\n  startingPositions: {\n    player: { x: 0, y: 0 },\n    goal: { x: 5, y: 5 },\n  },\n  board,\n});\n","import { GameBoard, WallTile, GameLevel, WallTileCondition } from \"../newLevel\";\nimport { MoveAction } from \"../position\";\n\nconst board = GameBoard.newAllNoRule(6, 6)\n  .update(\n    { x: 0, y: 0 },\n    new WallTile([MoveAction.Down, MoveAction.Left, MoveAction.Right])\n  )\n  .update({ x: 1, y: 0 }, new WallTile([MoveAction.Down, MoveAction.Left]))\n  .update({ x: 2, y: 0 }, new WallTile([MoveAction.Down, MoveAction.Up]))\n  .update(\n    { x: 3, y: 0 },\n    new WallTile([MoveAction.Down, MoveAction.Up, MoveAction.Right])\n  )\n  .update({ x: 4, y: 0 }, new WallTile([MoveAction.Down, MoveAction.Left]))\n  .update(\n    { x: 5, y: 0 },\n    new WallTileCondition({\n      [MoveAction.Right]: { variant: \"always\" },\n      [MoveAction.Down]: { variant: \"visit\", x: 5, y: 4 },\n    })\n  )\n  .update({ x: 0, y: 1 }, new WallTile([MoveAction.Right, MoveAction.Left]))\n  .update({ x: 1, y: 1 }, new WallTile([MoveAction.Left, MoveAction.Up]))\n  .update({ x: 2, y: 1 }, new WallTile([MoveAction.Down, MoveAction.Right]))\n  .update({ x: 3, y: 1 }, new WallTile([MoveAction.Down, MoveAction.Left]))\n  .update({ x: 4, y: 1 }, new WallTile([MoveAction.Up, MoveAction.Right]))\n  .update({ x: 5, y: 1 }, new WallTile([MoveAction.Left, MoveAction.Right]))\n  .update({ x: 0, y: 2 }, new WallTile([MoveAction.Left]))\n  .update({ x: 1, y: 2 }, new WallTile([MoveAction.Down, MoveAction.Up]))\n  .update({ x: 2, y: 2 }, new WallTile([MoveAction.Right]))\n  .update({ x: 3, y: 2 }, new WallTile([MoveAction.Left, MoveAction.Right]))\n  .update(\n    { x: 4, y: 2 },\n    new WallTile([MoveAction.Down, MoveAction.Left, MoveAction.Right])\n  )\n  .update({ x: 5, y: 2 }, new WallTile([MoveAction.Left, MoveAction.Right]))\n  .update({ x: 0, y: 3 }, new WallTile([MoveAction.Right, MoveAction.Left]))\n  .update({ x: 1, y: 3 }, new WallTile([MoveAction.Down, MoveAction.Left]))\n  //   .update({ x: 2, y: 3 }, new WallTile([MoveAction.Down]))\n  .update({ x: 3, y: 3 }, new WallTile([MoveAction.Up]))\n  .update({ x: 4, y: 3 }, new WallTile([MoveAction.Up, MoveAction.Right]))\n  .update({ x: 5, y: 3 }, new WallTile([MoveAction.Left, MoveAction.Right]))\n  .update({ x: 0, y: 4 }, new WallTile([MoveAction.Right, MoveAction.Left]))\n  .update({ x: 1, y: 4 }, new WallTile([MoveAction.Left, MoveAction.Right]))\n  .update({ x: 2, y: 4 }, new WallTile([MoveAction.Left, MoveAction.Up]))\n  .update({ x: 3, y: 4 }, new WallTile([MoveAction.Down]))\n  .update({ x: 4, y: 4 }, new WallTile([MoveAction.Down, MoveAction.Right]))\n  .update(\n    { x: 5, y: 4 },\n    new WallTile([MoveAction.Left, MoveAction.Right, MoveAction.Up])\n  )\n  .update({ x: 0, y: 5 }, new WallTile([MoveAction.Left, MoveAction.Up]))\n  .update({ x: 1, y: 5 }, new WallTile([MoveAction.Up]))\n  .update({ x: 2, y: 5 }, new WallTile([MoveAction.Up, MoveAction.Down]))\n  .update({ x: 3, y: 5 }, new WallTile([MoveAction.Right, MoveAction.Up]))\n  .update(\n    { x: 4, y: 5 },\n    new WallTile([MoveAction.Right, MoveAction.Up, MoveAction.Left])\n  )\n  .update(\n    { x: 5, y: 5 },\n    new WallTile([MoveAction.Left, MoveAction.Down, MoveAction.Right])\n  );\n\nexport const level5 = GameLevel.new({\n  name: \"Looks familiar?\",\n  thresholds: {\n    twoStar: 30,\n    threeStar: 20,\n  },\n  startingPositions: {\n    player: { x: 0, y: 0 },\n    goal: { x: 5, y: 5 },\n  },\n  board,\n});\n","import { GameBoard, GameLevel, WallTileGoalCopy } from \"../newLevel\";\nimport { MoveAction } from \"../position\";\n\nconst board = GameBoard.newAllNoRuleGoalCopy(6, 6)\n  .update({ x: 1, y: 0 }, new WallTileGoalCopy([MoveAction.Down]))\n  .update({ x: 1, y: 5 }, new WallTileGoalCopy([MoveAction.Up]))\n  .update({ x: 4, y: 4 }, new WallTileGoalCopy([MoveAction.Right]))\n  .update({ x: 5, y: 4 }, new WallTileGoalCopy([MoveAction.Left]));\n\nexport const level6 = GameLevel.new({\n  name: \"Run dream, run!\",\n  thresholds: {\n    twoStar: 10,\n    threeStar: 7,\n  },\n  startingPositions: {\n    player: { x: 0, y: 0 },\n    goal: { x: 1, y: 1 },\n  },\n  board,\n});\n","import { GameBoard, GameLevel, WallTileGoalMirror } from \"../newLevel\";\nimport { MoveAction } from \"../position\";\n\nconst board = GameBoard.newAllNoRuleGoalMirror(6, 6)\n  .update({ x: 0, y: 0 }, new WallTileGoalMirror([MoveAction.Up]))\n  .update({ x: 1, y: 0 }, new WallTileGoalMirror([MoveAction.Up]))\n  .update({ x: 2, y: 0 }, new WallTileGoalMirror([MoveAction.Up]))\n  .update({ x: 3, y: 0 }, new WallTileGoalMirror([MoveAction.Up]))\n  .update({ x: 5, y: 0 }, new WallTileGoalMirror([MoveAction.Up]))\n  .update({ x: 0, y: 1 }, new WallTileGoalMirror([MoveAction.Down]))\n  .update(\n    { x: 1, y: 1 },\n    new WallTileGoalMirror([MoveAction.Down, MoveAction.Up])\n  )\n  .update({ x: 2, y: 1 }, new WallTileGoalMirror([MoveAction.Down]))\n  .update({ x: 3, y: 1 }, new WallTileGoalMirror([MoveAction.Down]))\n  .update({ x: 5, y: 1 }, new WallTileGoalMirror([MoveAction.Down]))\n  .update({ x: 0, y: 4 }, new WallTileGoalMirror([MoveAction.Up]))\n  .update({ x: 1, y: 4 }, new WallTileGoalMirror([MoveAction.Up]))\n  .update({ x: 3, y: 4 }, new WallTileGoalMirror([MoveAction.Up]))\n  .update({ x: 4, y: 4 }, new WallTileGoalMirror([MoveAction.Up]))\n  .update({ x: 5, y: 4 }, new WallTileGoalMirror([MoveAction.Up]))\n  .update({ x: 0, y: 5 }, new WallTileGoalMirror([MoveAction.Down]))\n  .update({ x: 1, y: 5 }, new WallTileGoalMirror([MoveAction.Down]))\n  .update({ x: 3, y: 5 }, new WallTileGoalMirror([MoveAction.Down]))\n  .update({ x: 4, y: 5 }, new WallTileGoalMirror([MoveAction.Down]))\n  .update({ x: 5, y: 5 }, new WallTileGoalMirror([MoveAction.Down]))\n  .update({ x: 1, y: 2 }, new WallTileGoalMirror([MoveAction.Down]));\n\nexport const level7 = GameLevel.new({\n  name: \"Dream in the mirror\",\n  thresholds: {\n    twoStar: 13,\n    threeStar: 9,\n  },\n  startingPositions: {\n    player: { x: 0, y: 0 },\n    goal: { x: 0, y: 5 },\n  },\n  board,\n});\n","import { level1 } from \"../game/levels/01\";\nimport { level2 } from \"../game/levels/02\";\nimport { level3 } from \"../game/levels/03\";\nimport { level4 } from \"../game/levels/04\";\nimport { level5 } from \"../game/levels/05\";\nimport { GameLevel } from \"../game/newLevel\";\nimport { View } from \"./types\";\nimport { level6 } from \"../game/levels/06\";\nimport { level7 } from \"../game/levels/07\";\n\nexport type State = {\n  levels: GameLevel[];\n  activeLevel: number;\n  view: View;\n};\n\nexport const initialState: State = {\n  levels: [level1, level2, level3, level4, level5, level6, level7],\n  activeLevel: 0,\n  view: View.Intro,\n};\n","import { State } from \"../store/state\";\nimport { MoveAction } from \"./position\";\nimport { GameLevel } from \"./newLevel\";\n\nexport function mainLogic(state: State, move: MoveAction): State {\n  return updateActiveLevel(state, (level) =>\n    level.action(move).goalAction(move)\n  );\n}\n\nexport function updateActiveLevel(\n  state: State,\n  f: (level: GameLevel) => GameLevel\n): State {\n  return {\n    ...state,\n    levels: state.levels.map((level, i) =>\n      i === state.activeLevel ? f(level) : level\n    ),\n  };\n}\n","import { ActionType, createReducer, Reducer } from \"typesafe-actions\";\nimport * as actions from \"./actions\";\nimport { State, initialState } from \"./state\";\nimport { mainLogic, updateActiveLevel } from \"../game/main\";\nimport { MoveAction } from \"../game/position\";\nimport { View } from \"./types\";\n\nexport type RootAction = ActionType<typeof actions>;\n\nexport const reducer: Reducer<State, RootAction> = createReducer<\n  State,\n  RootAction\n>(initialState)\n  .handleAction(actions.arrowUp, (state) => mainLogic(state, MoveAction.Up))\n  .handleAction(actions.arrowDown, (state) => mainLogic(state, MoveAction.Down))\n  .handleAction(actions.arrowLeft, (state) => mainLogic(state, MoveAction.Left))\n  .handleAction(actions.arrowRight, (state) =>\n    mainLogic(state, MoveAction.Right)\n  )\n  .handleAction(actions.toLevel, (state) => ({\n    ...state,\n    view: View.Level,\n  }))\n  .handleAction(actions.toSpecificLevel, (state, action) => ({\n    ...state,\n    view: View.Level,\n    activeLevel: action.payload,\n  }))\n  .handleAction(actions.toSummary, (state) => ({\n    ...state,\n    view: View.Summary,\n  }))\n  .handleAction(actions.restartLevel, (state) =>\n    updateActiveLevel(state, (level) => level.restart())\n  );\n","import { createStore } from \"redux\";\nimport { reducer } from \"./reducer\";\n\n// const persistedState = localStorage.getItem(LOCAL_STORE_STATE);\n\nexport const store = createStore(\n  reducer\n  // persistedState ? JSON.parse(persistedState) : initialState\n);\n\n// store.subscribe(() =>\n//   localStorage.setItem(LOCAL_STORE_STATE, JSON.stringify(store.getState()))\n// );\n","import \"bootstrap/dist/css/bootstrap.css\";\nimport React from \"react\";\nimport { Provider } from \"react-redux\";\nimport \"./App.css\";\nimport { MainScreen } from \"./components/mainView\";\nimport { store } from \"./store/store\";\n\nconst App: React.FC = () => (\n  <Provider store={store}>\n    <div className=\"App\">\n      <MainScreen />\n    </div>\n  </Provider>\n);\n\nexport default App;\n\n// TODO:\n// class for board and its management\n// class for describing moves via chain-like syntax\n//\n// moveUp()\n//  .checkWall(walls)\n//  .modulize()\n//  .reactWithGoal()\n// ... etc\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}